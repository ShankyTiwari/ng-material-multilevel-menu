{"version":3,"sources":["../../../projects/ng-material-multilevel-menu/src/lib/app.model.ts","../../../projects/ng-material-multilevel-menu/src/lib/constants.ts","../../../projects/ng-material-multilevel-menu/src/lib/multilevel-menu.service.ts","../../../projects/ng-material-multilevel-menu/src/lib/animation.ts","../../projects/ng-material-multilevel-menu/src/lib/list-item/list-item.component.ts","../../../projects/ng-material-multilevel-menu/src/lib/materials.module.ts","../../../projects/ng-material-multilevel-menu/src/lib/ng-material-multilevel-menu.component.ts","../../../projects/ng-material-multilevel-menu/src/lib/ng-material-multilevel-menu.module.ts"],"names":["ExpandCollapseStatusEnum","CONSTANT","MultilevelMenuService","this","expandCollapseStatus","Subject","expandCollapseStatus$","asObservable","selectedMenuID","selectedMenuID$","prototype","generateId","text","possible","i","charAt","Math","floor","random","length","addRandomId","nodes","_this","forEach","node","id","undefined","items","recursiveCheckId","nodeId","some","nestedNode","findNodeRecursively","_a","link","nodeIndex","key","hasOwnProperty","encodeURI","foundLinkObject","getMatchedObjectByUrl","getMatchedObjectById","kvDummyComparerFn","setMenuExapandCollpaseStatus","status","next","neutral","selectMenuByID","menuID","SlideInOut","trigger","state","style","height","opacity","transition","group","animate","ExpandedLTR","transform","ExpandedRTL","ListItemComponent","router","multilevelMenuService","level","submenuLevel","nodeConfiguration","nodeExpandCollapseStatus","listTemplate","selectedItem","EventEmitter","isSelected","expanded","firstInitializer","selectedListClasses","ngOnChanges","nodeChildren","filter","n","hidden","hasChilden","hasItems","selectedNode","setSelectedClass","setExpandCollapseStatus","ngOnInit","disabled","faIcon","match","setClasses","isFound","highlightOnSelect","collapseOnSelect","getPaddingAtStart","paddingAtStart","getListStyle","styles","background","color","listBackgroundColor","selectedListFontColor","fontColor","getListIcon","icon","imageIcon","svgIcon","getSelectedSvgIcon","activeSvgIcon","getSelectedIcon","activeIcon","getSelectedFaIcon","activeFaIcon","getSelectedImageIcon","activeImageIcon","getHrefTargetType","hrefTargetType","isRtlLayout","rtlLayout","classes","expand","customTemplate","collapse","interfaceWithRoute","navigate","navigationExtras","onSelected","selectedListItem","emit","Component","args","selector","template","animations","Router","Input","Output","NgModule","imports","MatIconModule","MatListModule","MatRippleModule","declarations","exports","NgMaterialMultilevelMenuComponent","configuration","selectedLabel","expandCollapseStatusSubscription","selectMenuByIDSubscription","currentNode","nodeConfig","useDividers","isInvalidConfig","isInvalidData","detectInvalidConfig","initExpandCollapseStatus","initSelectedMenuID","events","subscribe","event","NavigationEnd","updateNodeByURL","urlAfterRedirects","url","foundNode","dontEmit","checkValidData","Array","isArray","console","warn","config","getClassName","classname","getGlobalStyle","backgroundColor","ngOnDestroy","unsubscribe","ContentChild","static","CommonModule","MaterialsModule","RouterModule"],"mappings":"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","sourcesContent":["import { NavigationExtras } from '@angular/router';\n\nexport interface MultilevelNodes {\n  id?: string;\n  label: string;\n  faIcon?: string;\n  icon?: string;\n  imageIcon?: string;\n  svgIcon?: string;\n  activeFaIcon?: string;\n  activeIcon?: string;\n  activeImageIcon?: string;\n  activeSvgIcon?: string;\n  hidden?: boolean;\n  link?: string;\n  externalRedirect?: boolean;\n  hrefTargetType?: string;\n  data?: any;\n  items?: MultilevelNodes[];\n  onSelected?: Function;\n  disabled?: boolean;\n  expanded?: boolean;\n  navigationExtras?: NavigationExtras;\n  dontEmit?: boolean;\n  hasChilden?: boolean;\n  isSelected?: boolean;\n}\n\nexport interface Configuration {\n    classname?: string;\n    paddingAtStart?: boolean;\n    backgroundColor?: string;\n    listBackgroundColor?: string;\n    fontColor?: string;\n    selectedListFontColor?: string;\n    interfaceWithRoute?: boolean;\n    collapseOnSelect?: boolean;\n    highlightOnSelect?: boolean;\n    useDividers?: boolean;\n    rtlLayout?: boolean;\n    customTemplate?: boolean;\n}\n\nexport interface BackgroundStyle {\n    background: string;\n}\n\nexport interface ListStyle {\n    background: string;\n    color: string;\n}\n\nexport enum ExpandCollapseStatusEnum {\n    expand = 'expand',\n    collapse = 'collapse',\n    neutral = 'neutral',\n}\n","export const CONSTANT = {\n    PADDING_AT_START: true,\n    DEFAULT_CLASS_NAME: `amml-container`,\n    DEFAULT_LIST_CLASS_NAME: `amml-item`,\n    SELECTED_LIST_CLASS_NAME: `selected-amml-item`,\n    ACTIVE_ITEM_CLASS_NAME: `active-amml-item`,\n    DISABLED_ITEM_CLASS_NAME: `disabled-amml-item`,\n    SUBMENU_ITEM_CLASS_NAME: `amml-submenu`,\n    HAS_SUBMENU_ITEM_CLASS_NAME: `has-amml-submenu`,\n    DEFAULT_SELECTED_FONT_COLOR: `#1976d2`,\n    DEFAULT_LIST_BACKGROUND_COLOR: `transparent`,\n    DEFAULT_LIST_FONT_COLOR: `rgba(0,0,0,.87)`,\n    DEFAULT_HREF_TARGET_TYPE: '_self',\n    ERROR_MESSAGE: `Invalid data for material Multilevel List Component`\n};\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { MultilevelNodes, ExpandCollapseStatusEnum } from './app.model';\nexport class MultilevelMenuService {\n  foundLinkObject: MultilevelNodes;\n  expandCollapseStatus: Subject<ExpandCollapseStatusEnum> = new Subject<ExpandCollapseStatusEnum>();\n  expandCollapseStatus$: Observable<ExpandCollapseStatusEnum> = this.expandCollapseStatus.asObservable();\n\n  selectedMenuID: Subject<string> = new Subject<string>();\n  selectedMenuID$: Observable<string> = this.selectedMenuID.asObservable();\n\n  private generateId(): string {\n    let text = '';\n    const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (let i = 0; i < 20; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n  }\n  addRandomId(nodes: MultilevelNodes[]): void {\n    nodes.forEach((node: MultilevelNodes) => {\n      node.id = this.generateId();\n      if (node.items !== undefined) {\n        this.addRandomId(node.items);\n      }\n    });\n  }\n  recursiveCheckId(node: MultilevelNodes, nodeId: string): boolean {\n    if (node.id === nodeId) {\n      return true;\n    } else {\n      if (node.items !== undefined) {\n        return node.items.some((nestedNode: MultilevelNodes) => {\n          return this.recursiveCheckId(nestedNode, nodeId);\n        });\n      }\n    }\n  }\n  private findNodeRecursively({nodes, link, id}: {nodes: MultilevelNodes[], link?: string, id?: string}): void {\n    for (let nodeIndex = 0; nodeIndex < nodes.length; nodeIndex++) {\n      const node = nodes[nodeIndex];\n      for (const key in node) {\n        if (node.hasOwnProperty(key)) {\n          if (encodeURI(node.link) === link) {\n            this.foundLinkObject = node;\n          } else if (node.id === id) {\n            this.foundLinkObject = node;\n          } else {\n            if (node.items !== undefined) {\n              this.findNodeRecursively({\n                nodes: node.items,\n                link: link? link: null,\n                id: id? id: null\n              });\n            }\n          }\n        }\n      }\n    }\n  }\n  getMatchedObjectByUrl(nodes: MultilevelNodes[], link: string): MultilevelNodes {\n    this.findNodeRecursively({nodes, link});\n    return this.foundLinkObject;\n  }\n  getMatchedObjectById(nodes: MultilevelNodes[], id: string): MultilevelNodes {\n    this.findNodeRecursively({nodes, id});\n    return this.foundLinkObject;\n  }\n  // overrides key-value pipe's default reordering (by key) by implementing dummy comprarer function\n  // https://angular.io/api/common/KeyValuePipe#description\n  kvDummyComparerFn() {\n    return 0;\n  }\n  setMenuExapandCollpaseStatus(status: ExpandCollapseStatusEnum): void {\n    this.expandCollapseStatus.next(status ? status : ExpandCollapseStatusEnum.neutral);\n  }\n  selectMenuByID(menuID: string) {\n    this.selectedMenuID.next(menuID);\n    return this.foundLinkObject;\n  }\n}\n","import { animate, group, state, style, transition, trigger } from '@angular/animations';\n\nexport const SlideInOut = trigger('SlideInOut', [\n    state(\n        'in', \n        style({ height: '*', opacity: 0 })),\n        transition(':leave', [\n            style({ height: '*', opacity: 0.2 }),\n            group([\n            animate(200, style({ height: 0 })),\n            animate('200ms ease-out', style({ opacity: 0 }))\n            ])\n        ]),\n        transition(':enter', [\n            style({ height: '0', opacity: 0 }),\n            group([\n            animate(200, style({ height: '*' })),\n            animate('400ms ease-out', style({ opacity: 1 }))\n            ])\n        ])\n    ]\n)\n\nexport const ExpandedLTR = trigger('ExpandedLTR', [\n    state('no', style({ transform: 'rotate(-90deg)' })),\n    state('yes', style({ transform: 'rotate(0deg)', })),\n\n    transition('no => yes', animate(200)),\n    transition('yes => no', animate(200))\n])\n\nexport const ExpandedRTL = trigger('ExpandedRTL', [\n    state('no', style({ transform: 'rotate(90deg)' })),\n    state('yes', style({ transform: 'rotate(0deg)', })),\n\n    transition('no => yes', animate(200)),\n    transition('yes => no', animate(200))\n])\n","import { Component, Input, OnChanges, OnInit, Output, EventEmitter, TemplateRef, ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Configuration, ListStyle, MultilevelNodes, ExpandCollapseStatusEnum } from './../app.model';\nimport { CONSTANT } from './../constants';\nimport { MultilevelMenuService } from './../multilevel-menu.service';\nimport { SlideInOut, ExpandedLTR, ExpandedRTL  } from './../animation';\n@Component({\n  selector: 'ng-list-item',\n  templateUrl: './list-item.component.html',\n  styleUrls: ['./list-item.component.css'],\n  animations: [SlideInOut, ExpandedLTR, ExpandedRTL]\n})\nexport class ListItemComponent implements OnChanges, OnInit {\n  @Input() node: MultilevelNodes;\n  @Input() level = 1;\n  @Input() submenuLevel = 0;\n  @Input() selectedNode: MultilevelNodes;\n  @Input() nodeConfiguration: Configuration = null;\n  @Input() nodeExpandCollapseStatus: ExpandCollapseStatusEnum = null;\n  @Input() listTemplate: TemplateRef<ElementRef> = null;\n\n  @Output() selectedItem = new EventEmitter<MultilevelNodes>();\n\n  isSelected = false;\n  expanded = false;\n  firstInitializer = false;\n  \n  nodeChildren: MultilevelNodes[];\n  classes: { [index: string]: boolean };\n  selectedListClasses: { [index: string]: boolean };\n  \n  constructor(\n    private router: Router,\n    public multilevelMenuService: MultilevelMenuService\n  ) {\n    this.selectedListClasses = {\n      [CONSTANT.DEFAULT_LIST_CLASS_NAME]: true,\n      [CONSTANT.SELECTED_LIST_CLASS_NAME]: false,\n      [CONSTANT.ACTIVE_ITEM_CLASS_NAME]: false,\n    };\n  }\n  ngOnChanges() {\n    this.nodeChildren = this.node && this.node.items ? this.node.items.filter(n => !n.hidden) : [];\n    this.node.hasChilden = this.hasItems();\n\n    if (this.selectedNode !== undefined && this.selectedNode !== null) {\n      this.setSelectedClass(this.multilevelMenuService.recursiveCheckId(this.node, this.selectedNode.id));\n    }\n    this.setExpandCollapseStatus();\n  }\n  ngOnInit() {\n    this.selectedListClasses[CONSTANT.DISABLED_ITEM_CLASS_NAME] = this.node.disabled;\n\n    if (this.node.faIcon !== null &&\n      this.node.faIcon !== undefined &&\n      this.node.faIcon.match(/\\bfa\\w(?!-)/) === null) {\n      this.node.faIcon = `fas ${this.node.faIcon}`;\n    }\n\n    this.selectedListClasses[`level-${this.level}-submenulevel-${this.submenuLevel}`] = true;\n    if (typeof this.node.expanded === 'boolean') {\n      this.expanded = this.node.expanded;\n    }\n    this.setClasses();\n  }\n  setSelectedClass(isFound: boolean): void {\n    if (isFound) {\n      if (!this.firstInitializer) {\n        this.expanded = true;\n      }\n      this.isSelected = this.nodeConfiguration.highlightOnSelect || this.selectedNode.items === undefined ? true : false;\n    } else {\n      this.isSelected = false;\n      if (this.nodeConfiguration.collapseOnSelect) {\n        this.node.expanded = false;\n        this.expanded = false;\n      }\n    }\n    this.selectedListClasses = {\n      [CONSTANT.DEFAULT_LIST_CLASS_NAME]: true,\n      [CONSTANT.SELECTED_LIST_CLASS_NAME]: this.isSelected,\n      [CONSTANT.ACTIVE_ITEM_CLASS_NAME]: this.selectedNode.id === this.node.id,\n      [CONSTANT.DISABLED_ITEM_CLASS_NAME]: this.node.disabled,\n      [`level-${this.level}-submenulevel-${this.submenuLevel}`]: true,\n    };\n    this.node.isSelected = this.isSelected;\n    this.setClasses();\n  }\n  getPaddingAtStart(): boolean {\n    return this.nodeConfiguration.paddingAtStart ? true : false;\n  }\n  getListStyle(): ListStyle {\n    const styles = {\n      background: CONSTANT.DEFAULT_LIST_BACKGROUND_COLOR,\n      color: CONSTANT.DEFAULT_LIST_FONT_COLOR\n    };\n    if (this.nodeConfiguration.listBackgroundColor !== null) {\n      styles.background = this.nodeConfiguration.listBackgroundColor;\n    }\n    if (this.isSelected) {\n      this.nodeConfiguration.selectedListFontColor !== null ?\n        styles.color = this.nodeConfiguration.selectedListFontColor : styles.color = CONSTANT.DEFAULT_SELECTED_FONT_COLOR;\n    } else if (this.nodeConfiguration.fontColor !== null) {\n      styles.color = this.nodeConfiguration.fontColor;\n    }\n    return styles;\n  }\n  getListIcon(node: MultilevelNodes): string {\n    if (node.icon !== null && node.icon !== undefined && node.icon !== '') {\n      return `icon`;\n    } else if (node.faIcon !== null && node.faIcon !== undefined && node.faIcon !== '') {\n      return `faicon`;\n    } else if (node.imageIcon !== null && node.imageIcon !== undefined && node.imageIcon !== '') {\n      return `imageicon`;\n    } else if (node.svgIcon !== null && node.svgIcon !== undefined && node.svgIcon !== '') {\n      return `svgicon`;\n    } else {\n      return ``;\n    }\n  }\n  getSelectedSvgIcon() {\n    if (this.isSelected && this.node.activeSvgIcon) {\n      return this.node.activeSvgIcon;\n    }\n    return this.node.svgIcon;\n  }\n  getSelectedIcon() {\n    if (this.isSelected && this.node.activeIcon) {\n      return this.node.activeIcon;\n    }\n    return this.node.icon;\n  }\n  getSelectedFaIcon() {\n    if (this.isSelected && this.node.activeFaIcon) {\n      return this.node.activeFaIcon;\n    }\n    return this.node.faIcon;\n  }\n  getSelectedImageIcon() {\n    if (this.isSelected && this.node.activeImageIcon) {\n      return this.node.activeImageIcon;\n    }\n    return this.node.imageIcon;\n  }\n  getHrefTargetType() {\n    if (this.node.hrefTargetType) {\n      return this.node.hrefTargetType;\n    }\n    return CONSTANT.DEFAULT_HREF_TARGET_TYPE;\n  }\n  hasItems(): boolean {\n    return this.nodeChildren.length > 0 ? true : false;\n  }\n  isRtlLayout(): boolean {\n    return this.nodeConfiguration.rtlLayout;\n  }\n  setClasses(): void {\n    this.classes = {\n      [`level-${this.level + 1}`]: true,\n      [CONSTANT.SUBMENU_ITEM_CLASS_NAME]: this.hasItems() && this.getPaddingAtStart(),\n      [CONSTANT.HAS_SUBMENU_ITEM_CLASS_NAME]: this.hasItems()\n    };\n  }\n  setExpandCollapseStatus(): void {\n    if (this.nodeExpandCollapseStatus !== null && this.nodeExpandCollapseStatus !== undefined ) {\n      if (this.nodeExpandCollapseStatus === ExpandCollapseStatusEnum.expand) {\n        this.expanded = true;\n        if (this.nodeConfiguration.customTemplate) {\n          this.node.expanded = true;\n        }\n      }\n      if (this.nodeExpandCollapseStatus === ExpandCollapseStatusEnum.collapse) {\n        this.expanded = false;\n        if (this.nodeConfiguration.customTemplate) {\n          this.node.expanded = false;\n        }\n      }\n    }\n  }\n  expand(node: MultilevelNodes): void {\n    if (node.disabled) {\n      return;\n    }\n    this.nodeExpandCollapseStatus = ExpandCollapseStatusEnum.neutral;\n    this.expanded = !this.expanded;\n    this.node.expanded =  this.expanded;\n    this.firstInitializer = true;\n    this.setClasses();\n    if (this.nodeConfiguration.interfaceWithRoute !== null\n      && this.nodeConfiguration.interfaceWithRoute\n      && node.link !== undefined\n      && node.link\n    ) {\n      this.router.navigate([node.link], node.navigationExtras);\n    } else if (node.onSelected && typeof node.onSelected === 'function') {\n      node.onSelected(node);\n      this.selectedListItem(node);\n    } else if (node.items === undefined || this.nodeConfiguration.collapseOnSelect) {\n      this.selectedListItem(node);\n    }\n  }\n  selectedListItem(node: MultilevelNodes): void {\n    this.selectedItem.emit(node);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\n\n@NgModule({\n  imports: [\n    MatIconModule,\n    MatListModule,\n    MatRippleModule,\n  ],\n  declarations: [],\n  exports: [\n    MatIconModule,\n    MatListModule,\n    MatRippleModule,\n  ]\n})\nexport class MaterialsModule { }\n","import { Component, OnChanges, OnInit, OnDestroy, Output, EventEmitter, Input, ContentChild, TemplateRef, ElementRef } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { BackgroundStyle, Configuration, MultilevelNodes, ExpandCollapseStatusEnum } from './app.model';\nimport { CONSTANT } from './constants';\nimport { MultilevelMenuService } from './multilevel-menu.service';\n\n@Component({\n  selector: 'ng-material-multilevel-menu',\n  templateUrl: './ng-material-multilevel-menu.component.html',\n  styleUrls: ['./ng-material-multilevel-menu.component.css'],\n})\nexport class NgMaterialMultilevelMenuComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() items: MultilevelNodes[];\n  @Input() configuration: Configuration = null;\n  @Output() selectedItem = new EventEmitter<MultilevelNodes>();\n  @Output() selectedLabel = new EventEmitter<MultilevelNodes>();\n  @ContentChild('listTemplate', {static: true}) listTemplate: TemplateRef<ElementRef>;\n\n  expandCollapseStatusSubscription: Subscription = null;\n  selectMenuByIDSubscription: Subscription = null;\n  currentNode: MultilevelNodes = null;\n\n  nodeConfig: Configuration = {\n    paddingAtStart: true,\n    listBackgroundColor: null,\n    fontColor: null,\n    selectedListFontColor: null,\n    interfaceWithRoute: null,\n    collapseOnSelect: null,\n    highlightOnSelect: false,\n    useDividers: true,\n    rtlLayout: false,\n    customTemplate: false,\n  };\n  isInvalidConfig = true;\n  isInvalidData = true;\n  nodeExpandCollapseStatus: ExpandCollapseStatusEnum = ExpandCollapseStatusEnum.neutral;\n\n  constructor(\n    private router: Router,\n    public multilevelMenuService: MultilevelMenuService\n  ) { }\n  ngOnChanges() {\n    this.detectInvalidConfig();\n    this.initExpandCollapseStatus();\n    this.initSelectedMenuID();\n  }\n  ngOnInit() {\n    if (\n      this.configuration !== null && this.configuration !== undefined && this.configuration !== '' &&\n      this.configuration.interfaceWithRoute !== null && this.configuration.interfaceWithRoute) {\n      this.router.events\n        .subscribe((event) => {\n          if (event instanceof NavigationEnd) {\n            this.updateNodeByURL(event.urlAfterRedirects);\n          }\n        });\n      this.updateNodeByURL(this.router.url);\n    }\n  }\n  updateNodeByURL(url: string): void {\n    const foundNode = this.multilevelMenuService.getMatchedObjectByUrl(this.items, url);\n    if (\n      foundNode !== undefined &&\n      foundNode.link !== undefined &&\n      foundNode.link !== null &&\n      foundNode.link !== ''\n      // && !foundNode.disabled // Prevent route redirection for disabled menu\n    ) {\n      this.currentNode = foundNode;\n      if(foundNode.dontEmit !== undefined && foundNode.dontEmit !== null && !foundNode.dontEmit) {\n        this.selectedListItem(foundNode);\n      }\n    }\n  }\n  checkValidData(): void {\n    if (this.items === undefined || (Array.isArray(this.items) && this.items.length === 0)) {\n      console.warn(CONSTANT.ERROR_MESSAGE);\n    } else {\n      this.items = this.items.filter(n => !n.hidden);\n      this.multilevelMenuService.addRandomId(this.items);\n      this.isInvalidData = false;\n    }\n  }\n  detectInvalidConfig(): void {\n    if (this.configuration === null || this.configuration === undefined || this.configuration === '') {\n      this.isInvalidConfig = true;\n    } else {\n      this.isInvalidConfig = false;\n      const config = this.configuration;\n      if (config.paddingAtStart !== undefined && config.paddingAtStart !== null && typeof config.paddingAtStart === 'boolean') {\n        this.nodeConfig.paddingAtStart = config.paddingAtStart;\n      }\n      if (config.listBackgroundColor !== '' &&\n        config.listBackgroundColor !== null &&\n        config.listBackgroundColor !== undefined) {\n        this.nodeConfig.listBackgroundColor = config.listBackgroundColor;\n      }\n      if (config.fontColor !== '' &&\n        config.fontColor !== null &&\n        config.fontColor !== undefined) {\n        this.nodeConfig.fontColor = config.fontColor;\n      }\n      if (config.selectedListFontColor !== '' &&\n        config.selectedListFontColor !== null &&\n        config.selectedListFontColor !== undefined) {\n        this.nodeConfig.selectedListFontColor = config.selectedListFontColor;\n      }\n      if (config.interfaceWithRoute !== null &&\n        config.interfaceWithRoute !== undefined &&\n        typeof config.interfaceWithRoute === 'boolean') {\n        this.nodeConfig.interfaceWithRoute = config.interfaceWithRoute;\n      }\n      if (config.collapseOnSelect !== null &&\n        config.collapseOnSelect !== undefined &&\n        typeof config.collapseOnSelect === 'boolean') {\n        this.nodeConfig.collapseOnSelect = config.collapseOnSelect;\n      }\n      if (config.highlightOnSelect !== null &&\n        config.highlightOnSelect !== undefined &&\n        typeof config.highlightOnSelect === 'boolean') {\n        this.nodeConfig.highlightOnSelect = config.highlightOnSelect;\n      }\n      if (config.useDividers !== null &&\n        config.useDividers !== undefined &&\n        typeof config.useDividers === 'boolean') {\n        this.nodeConfig.useDividers = config.useDividers;\n      }\n      if (config.rtlLayout !== null &&\n        config.rtlLayout !== undefined &&\n        typeof config.rtlLayout === 'boolean') {\n        this.nodeConfig.rtlLayout = config.rtlLayout;\n      }\n      if (config.customTemplate !== null &&\n        config.customTemplate !== undefined &&\n        typeof config.customTemplate === 'boolean') {\n        this.nodeConfig.customTemplate = config.customTemplate;\n      }\n      \n    }\n    this.checkValidData();\n  }\n  initExpandCollapseStatus(): void {\n    this.expandCollapseStatusSubscription = this.multilevelMenuService.expandCollapseStatus$.subscribe( (expandCollapseStatus: ExpandCollapseStatusEnum) => {\n      this.nodeExpandCollapseStatus = expandCollapseStatus ? expandCollapseStatus : ExpandCollapseStatusEnum.neutral;\n    }, () => {\n      this.nodeExpandCollapseStatus = ExpandCollapseStatusEnum.neutral;\n    });\n  }\n  initSelectedMenuID(): void {\n    this.selectMenuByIDSubscription = this.multilevelMenuService.selectedMenuID$.subscribe( (selectedMenuID: string) => {\n      if(selectedMenuID) {\n        const foundNode = this.multilevelMenuService.getMatchedObjectById(this.items, selectedMenuID);\n        if (foundNode !== undefined) {\n          this.currentNode = foundNode;\n          this.selectedListItem(foundNode);\n        }\n      }\n    });\n  }\n  getClassName(): string {\n    if (this.isInvalidConfig) {\n      return CONSTANT.DEFAULT_CLASS_NAME;\n    } else {\n      if (this.configuration.classname !== '' && this.configuration.classname !== null && this.configuration.classname !== undefined) {\n        return `${CONSTANT.DEFAULT_CLASS_NAME} ${this.configuration.classname}`;\n      } else {\n        return CONSTANT.DEFAULT_CLASS_NAME;\n      }\n    }\n  }\n  getGlobalStyle(): BackgroundStyle {\n    if (!this.isInvalidConfig) {\n      const styles = {\n        background : null\n      };\n      if (this.configuration.backgroundColor !== '' &&\n        this.configuration.backgroundColor !== null &&\n        this.configuration.backgroundColor !== undefined) {\n        styles.background = this.configuration.backgroundColor;\n      }\n      return styles;\n    }\n  }\n  isRtlLayout(): boolean {\n    return this.nodeConfig.rtlLayout;\n  }\n  selectedListItem(event: MultilevelNodes): void {\n    this.nodeExpandCollapseStatus = ExpandCollapseStatusEnum.neutral;\n    this.currentNode = event;\n    if(event.dontEmit !== undefined && event.dontEmit !== null && event.dontEmit) {\n      return;\n    }\n    if (event.items === undefined && (!event.onSelected || typeof event.onSelected !== 'function') ) {\n      this.selectedItem.emit(event);\n    } else {\n      this.selectedLabel.emit(event);\n    }\n  }\n  ngOnDestroy() {\n    this.expandCollapseStatusSubscription.unsubscribe();\n    this.selectMenuByIDSubscription.unsubscribe();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { ListItemComponent } from './list-item/list-item.component';\nimport { MaterialsModule } from './materials.module';\nimport { NgMaterialMultilevelMenuComponent } from './ng-material-multilevel-menu.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialsModule,\n    RouterModule,\n  ],\n  declarations: [\n    NgMaterialMultilevelMenuComponent,\n    ListItemComponent,\n  ],\n  exports: [NgMaterialMultilevelMenuComponent]\n})\nexport class NgMaterialMultilevelMenuModule {}\n"]}