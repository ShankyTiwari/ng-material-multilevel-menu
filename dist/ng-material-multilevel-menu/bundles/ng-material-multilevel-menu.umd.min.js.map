{"version":3,"sources":["ng://ng-material-multilevel-menu/lib/materials.module.ts","ng://ng-material-multilevel-menu/lib/multilevel-menu.service.ts","ng://ng-material-multilevel-menu/lib/constants.ts","ng://ng-material-multilevel-menu/lib/ng-material-multilevel-menu.component.ts","ng://ng-material-multilevel-menu/lib/list-item/list-item.component.ts","ng://ng-material-multilevel-menu/lib/ng-material-multilevel-menu.module.ts"],"names":["MaterialsModule","NgModule","args","imports","MatIconModule","MatListModule","MatRippleModule","declarations","exports","MultilevelMenuService","prototype","generateId","text","possible","i","charAt","Math","floor","random","length","addRandomId","nodes","_this","this","forEach","node","id","items","undefined","recursiveCheckId","nodeId","some","nestedNode","recursiveCheckLink","link","nodeIndex","key","hasOwnProperty","encodeURI","foundLinkObject","getMatchedObjectByUrl","Injectable","providedIn","CONSTANT","NgMaterialMultilevelMenuComponent","router","multilevelMenuService","configuration","selectedItem","EventEmitter","selectedLabel","nodeConfig","paddingAtStart","listBackgroundColor","fontColor","selectedListFontColor","interfaceWithRoute","collapseOnSelect","highlightOnSelect","rtlLayout","isInvalidConfig","ngOnChanges","detectInvalidConfig","ngOnInit","events","subscribe","event","NavigationEnd","updateNodeByURL","url","foundNode","currentNode","selectedListItem","checkValidData","console","warn","filter","n","hidden","config","getClassName","classname","getGlobalStyle","styles","background","backgroundColor","isRtlLayout","onSelected","emit","Component","selector","template","Router","Input","Output","ListItemComponent","level","submenuLevel","nodeConfiguration","isSelected","expanded","firstInitializer","selectedListClasses","_a","nodeChildren","selectedNode","setSelectedClass","disabled","setClasses","isFound","getPaddingAtStart","getListStyle","color","getListIcon","icon","faIcon","imageIcon","svgIcon","hasItems","classes","expand","externalRedirect","window","location","href","navigate","animations","trigger","state","style","height","opacity","transition","group","animate","transform","NgMaterialMultilevelMenuModule","CommonModule"],"mappings":"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","sourcesContent":["import { NgModule } from '@angular/core';\r\n\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatRippleModule,\r\n  ],\r\n  declarations: [],\r\n  exports: [\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatRippleModule,\r\n  ]\r\n})\r\nexport class MaterialsModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { MultilevelNodes } from './app.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MultilevelMenuService {\r\n  foundLinkObject: MultilevelNodes;\r\n  generateId(): string {\r\n    let text = '';\r\n    const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    for (let i = 0; i < 20; i++) {\r\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text;\r\n  }\r\n  addRandomId(nodes: MultilevelNodes[]): void {\r\n    nodes.forEach((node: MultilevelNodes) => {\r\n      node.id = this.generateId();\r\n      if (node.items !== undefined) {\r\n        this.addRandomId(node.items);\r\n      }\r\n    });\r\n  }\r\n  recursiveCheckId(node: MultilevelNodes, nodeId: string): boolean {\r\n    if (node.id === nodeId) {\r\n      return true;\r\n    } else {\r\n      if (node.items !== undefined) {\r\n        return node.items.some((nestedNode: MultilevelNodes) => {\r\n          return this.recursiveCheckId(nestedNode, nodeId);\r\n        });\r\n      }\r\n    }\r\n  }\r\n  recursiveCheckLink(nodes: MultilevelNodes[], link: string): void {\r\n    for (let nodeIndex = 0; nodeIndex < nodes.length; nodeIndex++) {\r\n      const node = nodes[nodeIndex];\r\n      for (const key in node) {\r\n        if (node.hasOwnProperty(key)) {\r\n          if (encodeURI(node.link) === link) {\r\n            this.foundLinkObject = node;\r\n          } else {\r\n            if (node.items !== undefined) {\r\n              this.recursiveCheckLink(node.items, link);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  getMatchedObjectByUrl(node: MultilevelNodes[], link: string): MultilevelNodes {\r\n    this.recursiveCheckLink(node, link);\r\n    return this.foundLinkObject;\r\n  }\r\n}\r\n","export const CONSTANT = {\r\n    PADDING_AT_START: true,\r\n    DEFAULT_CLASS_NAME: `amml-container`,\r\n    DEFAULT_LIST_CLASS_NAME: `amml-item`,\r\n    SELECTED_LIST_CLASS_NAME: `selected-amml-item`,\r\n    ACTIVE_ITEM_CLASS_NAME: `active-amml-item`,\r\n    DISABLED_ITEM_CLASS_NAME: `disabled-amml-item`,\r\n    DEFAULT_SELECTED_FONT_COLOR: `#1976d2`,\r\n    DEFAULT_LIST_BACKGROUND_COLOR: `transparent`,\r\n    DEFAULT_LIST_FONT_COLOR: `rgba(0,0,0,.87)`,\r\n    ERROR_MESSAGE: `Invalid data for material Multilevel List Component`\r\n};\r\n","import { Component, OnInit, OnChanges, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\n\r\nimport { MultilevelMenuService } from './multilevel-menu.service';\r\n\r\nimport { Configuration, MultilevelNodes, BackgroundStyle } from './app.model';\r\nimport { CONSTANT } from './constants';\r\n\r\n@Component({\r\n  selector: 'ng-material-multilevel-menu',\r\n  templateUrl: './ng-material-multilevel-menu.component.html',\r\n  styleUrls: ['./ng-material-multilevel-menu.component.css'],\r\n})\r\nexport class NgMaterialMultilevelMenuComponent implements OnInit, OnChanges {\r\n  @Input() items: MultilevelNodes[];\r\n  @Input() configuration: Configuration = null;\r\n  @Output() selectedItem = new EventEmitter<MultilevelNodes>();\r\n  @Output() selectedLabel = new EventEmitter<MultilevelNodes>();\r\n  currentNode: MultilevelNodes;\r\n  nodeConfig: Configuration = {\r\n    paddingAtStart: true,\r\n    listBackgroundColor: null,\r\n    fontColor: null,\r\n    selectedListFontColor: null,\r\n    interfaceWithRoute: null,\r\n    collapseOnSelect: null,\r\n    highlightOnSelect: false,\r\n    rtlLayout: false,\r\n  };\r\n  isInvalidConfig = true;\r\n  constructor(\r\n    private router: Router,\r\n    private multilevelMenuService: MultilevelMenuService\r\n  ) { }\r\n  ngOnChanges() {\r\n    this.detectInvalidConfig();\r\n  }\r\n  ngOnInit() {\r\n    if (\r\n      this.configuration !== null && this.configuration !== undefined && this.configuration !== '' &&\r\n      this.configuration.interfaceWithRoute !== null && this.configuration.interfaceWithRoute) {\r\n      this.router.events\r\n        .subscribe((event) => {\r\n          if (event instanceof NavigationEnd) {\r\n            this.updateNodeByURL(event.url);\r\n          }\r\n        });\r\n      this.updateNodeByURL(this.router.url);\r\n    }\r\n  }\r\n  updateNodeByURL(url: string): void {\r\n    const foundNode = this.multilevelMenuService.getMatchedObjectByUrl(this.items, url);\r\n    if (\r\n      foundNode !== undefined &&\r\n      foundNode.link !== undefined &&\r\n      foundNode.link !== null &&\r\n      foundNode.link !== ''\r\n      // && !foundNode.disabled // Prevent route redirection for disabled menu\r\n    ) {\r\n      this.currentNode = foundNode;\r\n      this.selectedListItem(foundNode);\r\n    }\r\n  }\r\n  checkValidData(): void {\r\n    if (this.items.length === 0) {\r\n      console.warn(CONSTANT.ERROR_MESSAGE);\r\n    } else {\r\n      this.items = this.items.filter(n => !n.hidden);\r\n      this.multilevelMenuService.addRandomId(this.items);\r\n    }\r\n  }\r\n  detectInvalidConfig(): void {\r\n    if (this.configuration === null || this.configuration === undefined || this.configuration === '') {\r\n      this.isInvalidConfig = true;\r\n    } else {\r\n      this.isInvalidConfig = false;\r\n      const config = this.configuration;\r\n      if (config.paddingAtStart !== undefined && config.paddingAtStart !== null && typeof config.paddingAtStart === 'boolean') {\r\n        this.nodeConfig.paddingAtStart = config.paddingAtStart;\r\n      }\r\n      if (config.listBackgroundColor !== '' &&\r\n        config.listBackgroundColor !== null &&\r\n        config.listBackgroundColor !== undefined) {\r\n        this.nodeConfig.listBackgroundColor = config.listBackgroundColor;\r\n      }\r\n      if (config.fontColor !== '' &&\r\n        config.fontColor !== null &&\r\n        config.fontColor !== undefined) {\r\n        this.nodeConfig.fontColor = config.fontColor;\r\n      }\r\n      if (config.selectedListFontColor !== '' &&\r\n        config.selectedListFontColor !== null &&\r\n        config.selectedListFontColor !== undefined) {\r\n        this.nodeConfig.selectedListFontColor = config.selectedListFontColor;\r\n      }\r\n      if (config.interfaceWithRoute !== null &&\r\n        config.interfaceWithRoute !== undefined &&\r\n        typeof config.interfaceWithRoute === 'boolean') {\r\n        this.nodeConfig.interfaceWithRoute = config.interfaceWithRoute;\r\n      }\r\n      if (config.collapseOnSelect !== null &&\r\n        config.collapseOnSelect !== undefined &&\r\n        typeof config.collapseOnSelect === 'boolean') {\r\n        this.nodeConfig.collapseOnSelect = config.collapseOnSelect;\r\n      }\r\n      if (config.highlightOnSelect !== null &&\r\n        config.highlightOnSelect !== undefined &&\r\n        typeof config.highlightOnSelect === 'boolean') {\r\n        this.nodeConfig.highlightOnSelect = config.highlightOnSelect;\r\n      }\r\n      if (config.rtlLayout !== null &&\r\n        config.rtlLayout !== undefined &&\r\n        typeof config.rtlLayout === 'boolean') {\r\n        this.nodeConfig.rtlLayout = config.rtlLayout;\r\n      }\r\n      this.checkValidData();\r\n    }\r\n  }\r\n  getClassName(): string {\r\n    if (this.isInvalidConfig) {\r\n      return CONSTANT.DEFAULT_CLASS_NAME;\r\n    } else {\r\n      if (this.configuration.classname !== '' && this.configuration.classname !== null && this.configuration.classname !== undefined) {\r\n        return `${CONSTANT.DEFAULT_CLASS_NAME} ${this.configuration.classname}`;\r\n      } else {\r\n        return CONSTANT.DEFAULT_CLASS_NAME;\r\n      }\r\n    }\r\n  }\r\n  getGlobalStyle(): BackgroundStyle {\r\n    if (!this.isInvalidConfig) {\r\n      const styles = {\r\n        background : null\r\n      };\r\n      if (this.configuration.backgroundColor !== '' &&\r\n        this.configuration.backgroundColor !== null &&\r\n        this.configuration.backgroundColor !== undefined) {\r\n        styles.background = this.configuration.backgroundColor;\r\n      }\r\n      return styles;\r\n    }\r\n  }\r\n  isRtlLayout(): boolean {\r\n    return this.nodeConfig.rtlLayout;\r\n  }\r\n  selectedListItem(event: MultilevelNodes): void {\r\n    this.currentNode = event;\r\n    if (event.items === undefined && (!event.onSelected || typeof event.onSelected !== 'function') ) {\r\n      this.selectedItem.emit(event);\r\n    } else {\r\n      this.selectedLabel.emit(event);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, OnChanges, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { trigger, style, transition, animate, state, group } from '@angular/animations';\r\n\r\nimport { MultilevelMenuService } from './../multilevel-menu.service';\r\n\r\nimport { Configuration, MultilevelNodes, ListStyle } from './../app.model';\r\nimport { CONSTANT } from './../constants';\r\n\r\n@Component({\r\n  selector: 'ng-list-item',\r\n  templateUrl: './list-item.component.html',\r\n  styleUrls: ['./list-item.component.css'],\r\n  animations: [\r\n    trigger('slideInOut', [\r\n      state('in', style({ height: '*', opacity: 0 })),\r\n      transition(':leave', [\r\n        style({ height: '*', opacity: 0.2 }),\r\n        group([\r\n          animate(200, style({ height: 0 })),\r\n          animate('200ms ease-out', style({ opacity: 0 }))\r\n        ])\r\n      ]),\r\n      transition(':enter', [\r\n        style({ height: '0', opacity: 0 }),\r\n        group([\r\n          animate(200, style({ height: '*' })),\r\n          animate('400ms ease-out', style({ opacity: 1 }))\r\n        ])\r\n      ])\r\n    ]),\r\n    trigger('isExpandedLTR', [\r\n      state('no', style({ transform: 'rotate(-90deg)' })),\r\n      state('yes', style({ transform: 'rotate(0deg)', })),\r\n\r\n      transition('no => yes',\r\n        animate(200)\r\n      ),\r\n      transition('yes => no',\r\n        animate(200)\r\n      )\r\n    ]),\r\n    trigger('isExpandedRTL', [\r\n      state('no', style({ transform: 'rotate(90deg)' })),\r\n      state('yes', style({ transform: 'rotate(0deg)', })),\r\n\r\n      transition('no => yes',\r\n        animate(200)\r\n      ),\r\n      transition('yes => no',\r\n        animate(200)\r\n      )\r\n    ])\r\n  ]\r\n})\r\nexport class ListItemComponent implements OnChanges, OnInit {\r\n  @Input() node: MultilevelNodes;\r\n  @Input() level = 1;\r\n  @Input() submenuLevel = 0;\r\n  @Input() selectedNode: MultilevelNodes;\r\n  @Input() nodeConfiguration: Configuration = null;\r\n  @Output() selectedItem = new EventEmitter<MultilevelNodes>();\r\n  isSelected = false;\r\n  nodeChildren: MultilevelNodes[];\r\n  classes: { [index: string]: boolean };\r\n  selectedListClasses: { [index: string]: boolean };\r\n  expanded = false;\r\n  firstInitializer = false;\r\n  constructor(\r\n    private router: Router,\r\n    private multilevelMenuService: MultilevelMenuService\r\n  ) {\r\n    this.selectedListClasses = {\r\n      [CONSTANT.DEFAULT_LIST_CLASS_NAME]: true,\r\n      [CONSTANT.SELECTED_LIST_CLASS_NAME]: false,\r\n      [CONSTANT.ACTIVE_ITEM_CLASS_NAME]: false,\r\n    };\r\n  }\r\n  ngOnChanges() {\r\n    this.nodeChildren = this.node && this.node.items ? this.node.items.filter(n => !n.hidden) : [];\r\n    if (this.selectedNode !== undefined && this.selectedNode !== null) {\r\n      this.setSelectedClass(this.multilevelMenuService.recursiveCheckId(this.node, this.selectedNode.id));\r\n    }\r\n  }\r\n  ngOnInit() {\r\n    this.selectedListClasses[CONSTANT.DISABLED_ITEM_CLASS_NAME] = this.node.disabled;\r\n    this.selectedListClasses[`level-${this.level}-submenulevel-${this.submenuLevel}`] = true;\r\n    if (typeof this.node.expanded === 'boolean') {\r\n      this.expanded = this.node.expanded;\r\n    }\r\n    this.setClasses();\r\n  }\r\n  setSelectedClass(isFound: boolean): void {\r\n    if (isFound) {\r\n      if (!this.firstInitializer) {\r\n        this.expanded = true;\r\n      }\r\n      this.isSelected = this.nodeConfiguration.highlightOnSelect || this.selectedNode.items === undefined ? true : false;\r\n    } else {\r\n      this.isSelected = false;\r\n      if (this.nodeConfiguration.collapseOnSelect) {\r\n        this.expanded = false;\r\n      }\r\n    }\r\n    this.selectedListClasses = {\r\n      [CONSTANT.DEFAULT_LIST_CLASS_NAME]: true,\r\n      [CONSTANT.SELECTED_LIST_CLASS_NAME]: this.isSelected,\r\n      [CONSTANT.ACTIVE_ITEM_CLASS_NAME]: this.selectedNode.id === this.node.id,\r\n      [CONSTANT.DISABLED_ITEM_CLASS_NAME]: this.node.disabled,\r\n      [`level-${this.level}-submenulevel-${this.submenuLevel}`]: true,\r\n    };\r\n    this.setClasses();\r\n  }\r\n  getPaddingAtStart(): boolean {\r\n    return this.nodeConfiguration.paddingAtStart ? true : false;\r\n  }\r\n  getListStyle(): ListStyle {\r\n    const styles = {\r\n      background: CONSTANT.DEFAULT_LIST_BACKGROUND_COLOR,\r\n      color: CONSTANT.DEFAULT_LIST_FONT_COLOR\r\n    };\r\n    if (this.nodeConfiguration.listBackgroundColor !== null) {\r\n      styles.background = this.nodeConfiguration.listBackgroundColor;\r\n    }\r\n    if (this.isSelected) {\r\n      this.nodeConfiguration.selectedListFontColor !== null ?\r\n        styles.color = this.nodeConfiguration.selectedListFontColor : styles.color = CONSTANT.DEFAULT_SELECTED_FONT_COLOR;\r\n    } else if (this.nodeConfiguration.fontColor !== null) {\r\n      styles.color = this.nodeConfiguration.fontColor;\r\n    }\r\n    return styles;\r\n  }\r\n  getListIcon(node: MultilevelNodes): string {\r\n    if (node.icon !== null && node.icon !== undefined && node.icon !== '') {\r\n      return `icon`;\r\n    } else if (node.faIcon !== null && node.faIcon !== undefined && node.faIcon !== '') {\r\n      return `faicon`;\r\n    } else if (node.imageIcon !== null && node.imageIcon !== undefined && node.imageIcon !== '') {\r\n      return `imageicon`;\r\n    } else if (node.svgIcon !== null && node.svgIcon !== undefined && node.svgIcon !== '') {\r\n      return `svgicon`;\r\n    } else {\r\n      return ``;\r\n    }\r\n  }\r\n  hasItems(): boolean {\r\n    return this.nodeChildren.length > 0 ? true : false;\r\n  }\r\n  isRtlLayout(): boolean {\r\n    return this.nodeConfiguration.rtlLayout;\r\n  }\r\n  setClasses(): void {\r\n    this.classes = {\r\n      [`level-${this.level + 1}`]: true,\r\n      'amml-submenu': this.hasItems() && this.getPaddingAtStart()\r\n    };\r\n  }\r\n  expand(node: MultilevelNodes): void {\r\n    if (node.disabled) {\r\n      return;\r\n    }\r\n    this.expanded = !this.expanded;\r\n    this.firstInitializer = true;\r\n    this.setClasses();\r\n    if (this.nodeConfiguration.interfaceWithRoute !== null\r\n      && this.nodeConfiguration.interfaceWithRoute\r\n      && node.link !== undefined\r\n      && node.link\r\n    ) {\r\n      if (node.externalRedirect !== undefined && node.externalRedirect) {\r\n        window.location.href = node.link;\r\n      } else {\r\n        this.router.navigate([node.link]);\r\n      }\r\n    } else if (node.onSelected && typeof node.onSelected === 'function') {\r\n      node.onSelected(node);\r\n      this.selectedListItem(node);\r\n    } else if (node.items === undefined || this.nodeConfiguration.collapseOnSelect) {\r\n      this.selectedListItem(node);\r\n    }\r\n  }\r\n  selectedListItem(node: MultilevelNodes): void {\r\n    this.selectedItem.emit(node);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MaterialsModule } from './materials.module';\r\n\r\nimport { NgMaterialMultilevelMenuComponent } from './ng-material-multilevel-menu.component';\r\nimport { ListItemComponent } from './list-item/list-item.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MaterialsModule\r\n  ],\r\n  declarations: [NgMaterialMultilevelMenuComponent, ListItemComponent],\r\n  exports: [NgMaterialMultilevelMenuComponent]\r\n})\r\nexport class NgMaterialMultilevelMenuModule { }\r\n"]}